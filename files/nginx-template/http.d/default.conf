
# shared memory for webdav locks
dav_ext_lock_zone zone=foo:10m;

server {
	listen ${WEBDAV_PORT} default_server;
	listen [::]:${WEBDAV_PORT} default_server;

	# webdav tweaks ....
	send_timeout 3600;
	client_body_timeout 3600;
	keepalive_timeout 3600;
	lingering_timeout 3600;
	client_max_body_size ${WEBDAV_MAX_SIZE};

	# Auth settings
	auth_basic "WebDAV Area";
	auth_basic_user_file "${WEBDAV_AUTH_USER_FILE}";

	# DAV Root
	location / {
		root ${WEBDAV_HOME};

        dav_methods PUT DELETE MKCOL COPY MOVE;
		dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
        dav_ext_lock zone=foo;
        create_full_put_path on;

		# is it a create folder request ?
		# -> most webdav clients don't add trailing slash on MKCOL but nginx requires it
		# see https://www.robpeck.com/2020/06/making-webdav-actually-work-on-nginx/
		# and http://netlab.dhis.org/wiki/ru:software:nginx:webdav
		if ($request_method = MKCOL) {
    		rewrite ^(.*[^/])$ $1/ break;
		}
		if (-d $request_filename) {
			# add D to $parse (directory access)
		    rewrite ^(.*[^/])$ $1/ break;
		}

		# some more folder fixing for non compliant clients (esp. for move, copy etc. requests)
		# build up variable per request and rewrite headers if condition matches
		set $destination $http_destination;
		set $parse "";
		if ($request_method = MOVE) {
			# add M to $parse
		    set $parse "${parse}M";
		}
		if ($request_method = COPY) {
			# add M to $parse
		    set $parse "${parse}M";
		}
		if (-d $request_filename) {
			# add D to $parse (directory access)
		    rewrite ^(.*[^/])$ $1/ break;
			set $parse "${parse}D";
		}
		# if ($destination ~ ^https://dav.example.com/(.*)$) {
		# if ($destination ~ ^http://192.168.59.105:8080/(.*)$) {
 		# if ($destination ~ ^$scheme://$host/(.*)$) {
		if ($destination ~ ^(.*?)://([^/]*)/(.*)$) {
			# $1 scheme, $2 host, $3 path
 			set $ob $3;
		    set $parse "${parse}R${ob}";
		}
		# rewrite destination header if required
		if ($parse ~ ^MDR(.*[^/])$) {
    		set $mvpath $1;
		    # set $destination "https://dav.example.com/${mvpath}/";
			set $destination "$scheme://$host/${mvpath}/";
		    more_set_input_headers "Destination: $destination";
		}

		# Some OSX Finder tweaks ... stop garbage and indexing
		location ~ \.(_.*|DS_Store|Spotlight-V100|TemporaryItems|Trashes|hidden|localized)$ {
		    access_log  off;
		    error_log   /dev/null emerg;

		    if ($request_method = PUT) {
        		return 403;
		    }
		    return 404;
		}

		location ~ \.metadata_never_index$ {
			# TODO: how about ?
			#        .ql_disablethumbnails
			#        .ql_disablecache
		    return 200 "Don't index this drive, Finder!";
		}

		# set DAV header to 1, 2 ... this module only set's it to 2, but many clients require both
		# 1 ... announce DAV standard protocol
		# 2 ... announce DAV locking protocol
		more_set_headers -s 200 'DAV: 1, 2';

	}

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}
}
